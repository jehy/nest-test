version: '3.7'

services:
  api-dev:
    container_name: api-dev
    build:
      dockerfile: Dockerfile
      target: development
      context: .
    working_dir: /usr/src/app
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
    # Run a command against the development stage of the image
    command: node dist/src/main.js
    ports:
      - '3000:3000'
    depends_on:
      - postgres
  api:
    container_name: api
    build:
      dockerfile: Dockerfile
      target: production
      context: .
    working_dir: /usr/src/app
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
    # Run a command against the development stage of the image
    command: node dist/src/main.js
    ports:
      - '3000:3000'
    depends_on:
      - postgres
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'

volumes:
  db-data:

networks:
  default:
